package msg.group.pageobjects;

import java.util.List;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.PageFactory;

import msg.group.abstractcomponents.AbstractComponent;

public class OrderPage extends AbstractComponent {

	WebDriver driver;
	
	public OrderPage(WebDriver driver) {
		
		// WebDriver zur Parentklasse senden
		super(driver);
		
		// initialization driver
		this.driver = driver;
		
		// Triggern des Initialisieren aller Elemente mit Hilfe der PageFactory 
		PageFactory.initElements(driver, this);
	}

	//List<WebElement> cartProducts = driver.findElements(By.cssSelector(".cartSection h3"));
	@FindBy(css = ".cartSection h3")
	List<WebElement> cartProducts;
	
	//driver.findElement(By.cssSelector(".totalRow button"));
	@FindBy(css = ".totalRow button")
	WebElement checkoutButton;

	public List<WebElement> getCartProductList() {
		
		return cartProducts;
	}
	
	public Boolean verifyProductDisplay(String productName) {
		
		// NICHT filtern, sondern mit anyMatch prÃ¼fen, ob das Produkt mit dem Prduktnamen im Warenkorb enthalten ist
		boolean match = getCartProductList().stream()
				.anyMatch(cartProduct-> cartProduct.getText().equalsIgnoreCase(productName));
		return match;
	}

	public CheckoutPage goToCheckout() {
		
		checkoutButton.click();
		
		// Weiterleitung zur Checkout-Page
		return new CheckoutPage(driver);
	}

}
