package msg.group.testcomponents;

import java.io.File;
import java.io.IOException;

import org.apache.commons.io.FileUtils;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.testng.ITestContext;
import org.testng.ITestListener;
import org.testng.ITestResult;

import com.aventstack.extentreports.ExtentReports;
import com.aventstack.extentreports.ExtentTest;
import com.aventstack.extentreports.Status;

import msg.group.resources.ExtentReporterNG;

public class Listeners implements ITestListener {

	ExtentReports extent = ExtentReporterNG.getReportObject();
	ExtentTest test;
	
	@Override
	public void onTestStart(ITestResult result) {
		
		// wird vor Start irgendeines Testausgeführt
		
		// für jeden Test wird vor dessen Ausführung ein Eintrag in den Testreport erstellt
		test = extent.createTest(result.getMethod().getMethodName());
	}

	@Override
	public void onTestSuccess(ITestResult result) {
		
		// wird NUR nach einem erfolgreichen Test ausgeführt
	
		// braucht nicht gemacht werden
		//test.log(Status.PASS, "Test passed.");
	}

	@Override
	public void onTestFailure(ITestResult result) {
		
		// wird NUR nach einem fehlgeschlagenen Test ausgeführt
	
		test.log(Status.FAIL, "Test failed.");
		
		// Fehlernachricht ausgeben
		test.fail(result.getThrowable());
		
		// Screenshot vom fehlgeschlagenen Test machen
		
	}

	
	public String getScreenshot(String testCaseName) throws IOException {
		
		TakesScreenshot ts = (TakesScreenshot)driver;
		File source = ts.getScreenshotAs(OutputType.FILE);
		File file = new File(System.getProperty("user.dir") + 
				"//reports//" + testCaseName + ".png");
		FileUtils.copyFile(source, file);
		
		// gibt die Datei inkl. Pfad mit dem gespeicherten Screenshot zurück
		return System.getProperty("user.dir") + "//reports//" + testCaseName + ".png";
	}

	@Override
	public void onTestSkipped(ITestResult result) {
		
	}

	@Override
	public void onTestFailedButWithinSuccessPercentage(ITestResult result) {
		
	}

	@Override
	public void onTestFailedWithTimeout(ITestResult result) {
		
	}

	@Override
	public void onStart(ITestContext context) {
		
	}

	@Override
	public void onFinish(ITestContext context) {
		
	}
}
