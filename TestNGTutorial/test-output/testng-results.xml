<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="2" total="14" passed="11" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-06-17T12:07:17 MESZ" name="Loan Department" finished-at="2025-06-17T12:07:17 MESZ" duration-ms="55">
    <groups>
      <group name="Smoke">
        <method signature="Day2.pLoan()[pri:0, instance:msg.group.basics.Day2@63376bed]" name="pLoan" class="msg.group.basics.Day2"/>
        <method signature="Day3.mobileLoginCarLoan()[pri:0, instance:msg.group.basics.Day3@6440112d]" name="mobileLoginCarLoan" class="msg.group.basics.Day3"/>
      </group> <!-- Smoke -->
    </groups>
    <test started-at="2025-06-17T12:07:17 MESZ" name="Personal loan" finished-at="2025-06-17T12:07:17 MESZ" duration-ms="49">
      <class name="msg.group.basics.Day4">
        <test-method signature="loginAPIHomeLoan()[pri:0, instance:msg.group.basics.Day4@4145bad8]" started-at="2025-06-17T12:07:17 MESZ" name="loginAPIHomeLoan" finished-at="2025-06-17T12:07:17 MESZ" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginAPIHomeLoan -->
        <test-method signature="mobileLoginHomeLoan(java.lang.String)[pri:0, instance:msg.group.basics.Day4@4145bad8]" started-at="2025-06-17T12:07:17 MESZ" name="mobileLoginHomeLoan" finished-at="2025-06-17T12:07:17 MESZ" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[personalloan.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileLoginHomeLoan -->
      </class> <!-- msg.group.basics.Day4 -->
      <class name="msg.group.basics.Day1">
        <test-method signature="firstDemo()[pri:0, instance:msg.group.basics.Day1@1a6d8329]" started-at="2025-06-17T12:07:17 MESZ" name="firstDemo" finished-at="2025-06-17T12:07:17 MESZ" duration-ms="12" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1590)
at org.testng.Assert.assertTrue(Assert.java:57)
at org.testng.Assert.assertTrue(Assert.java:67)
at msg.group.basics.Day1.firstDemo(Day1.java:27)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:687)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:995)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:741)
at org.testng.TestRunner.run(TestRunner.java:616)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:840)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- firstDemo -->
        <test-method signature="secondTest()[pri:0, instance:msg.group.basics.Day1@1a6d8329]" started-at="2025-06-17T12:07:17 MESZ" name="secondTest" finished-at="2025-06-17T12:07:17 MESZ" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- secondTest -->
        <test-method is-config="true" signature="lastExecution()[pri:0, instance:msg.group.basics.Day1@1a6d8329]" started-at="2025-06-17T12:07:17 MESZ" name="lastExecution" finished-at="2025-06-17T12:07:17 MESZ" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lastExecution -->
      </class> <!-- msg.group.basics.Day1 -->
      <class name="msg.group.basics.Day2">
        <test-method is-config="true" signature="prerequiste()[pri:0, instance:msg.group.basics.Day2@63376bed]" started-at="2025-06-17T12:07:17 MESZ" name="prerequiste" finished-at="2025-06-17T12:07:17 MESZ" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prerequiste -->
        <test-method signature="pLoan()[pri:0, instance:msg.group.basics.Day2@63376bed]" started-at="2025-06-17T12:07:17 MESZ" name="pLoan" finished-at="2025-06-17T12:07:17 MESZ" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pLoan -->
      </class> <!-- msg.group.basics.Day2 -->
    </test> <!-- Personal loan -->
    <test started-at="2025-06-17T12:07:17 MESZ" name="Car loan" finished-at="2025-06-17T12:07:17 MESZ" duration-ms="55">
      <class name="msg.group.basics.Day3">
        <test-method is-config="true" signature="beforeSuiteLoanDepartment()[pri:0, instance:msg.group.basics.Day3@6440112d]" started-at="2025-06-17T12:07:17 MESZ" name="beforeSuiteLoanDepartment" finished-at="2025-06-17T12:07:17 MESZ" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuiteLoanDepartment -->
        <test-method is-config="true" signature="beforeClassDay3()[pri:0, instance:msg.group.basics.Day3@6440112d]" started-at="2025-06-17T12:07:17 MESZ" name="beforeClassDay3" finished-at="2025-06-17T12:07:17 MESZ" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClassDay3 -->
        <test-method is-config="true" signature="beforeEvery()[pri:0, instance:msg.group.basics.Day3@6440112d]" started-at="2025-06-17T12:07:17 MESZ" name="beforeEvery" finished-at="2025-06-17T12:07:17 MESZ" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEvery -->
        <test-method signature="logoutAPICarLoan()[pri:0, instance:msg.group.basics.Day3@6440112d]" started-at="2025-06-17T12:07:17 MESZ" name="logoutAPICarLoan" finished-at="2025-06-17T12:07:17 MESZ" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- logoutAPICarLoan -->
        <test-method is-config="true" signature="afterEvery()[pri:0, instance:msg.group.basics.Day3@6440112d]" started-at="2025-06-17T12:07:17 MESZ" name="afterEvery" finished-at="2025-06-17T12:07:17 MESZ" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEvery -->
        <test-method signature="mobileLoginCarLoan()[pri:0, instance:msg.group.basics.Day3@6440112d]" started-at="2025-06-17T12:07:17 MESZ" name="mobileLoginCarLoan" finished-at="2025-06-17T12:07:17 MESZ" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileLoginCarLoan -->
        <test-method is-config="true" signature="beforeEvery()[pri:0, instance:msg.group.basics.Day3@6440112d]" started-at="2025-06-17T12:07:17 MESZ" name="beforeEvery" finished-at="2025-06-17T12:07:17 MESZ" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEvery -->
        <test-method is-config="true" signature="afterEvery()[pri:0, instance:msg.group.basics.Day3@6440112d]" started-at="2025-06-17T12:07:17 MESZ" name="afterEvery" finished-at="2025-06-17T12:07:17 MESZ" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEvery -->
        <test-method signature="mobileSignOutCarLoan(java.lang.String,java.lang.String)[pri:0, instance:msg.group.basics.Day3@6440112d]" started-at="2025-06-17T12:07:17 MESZ" name="mobileSignOutCarLoan" data-provider="getData" finished-at="2025-06-17T12:07:17 MESZ" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firstsetusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[firstsetpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileSignOutCarLoan -->
        <test-method is-config="true" signature="beforeEvery()[pri:0, instance:msg.group.basics.Day3@6440112d]" started-at="2025-06-17T12:07:17 MESZ" name="beforeEvery" finished-at="2025-06-17T12:07:17 MESZ" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEvery -->
        <test-method signature="mobileSignOutCarLoan(java.lang.String,java.lang.String)[pri:0, instance:msg.group.basics.Day3@6440112d]" started-at="2025-06-17T12:07:17 MESZ" name="mobileSignOutCarLoan" data-provider="getData" finished-at="2025-06-17T12:07:17 MESZ" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[secondsetusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secondsetpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileSignOutCarLoan -->
        <test-method is-config="true" signature="afterEvery()[pri:0, instance:msg.group.basics.Day3@6440112d]" started-at="2025-06-17T12:07:17 MESZ" name="afterEvery" finished-at="2025-06-17T12:07:17 MESZ" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEvery -->
        <test-method is-config="true" signature="beforeEvery()[pri:0, instance:msg.group.basics.Day3@6440112d]" started-at="2025-06-17T12:07:17 MESZ" name="beforeEvery" finished-at="2025-06-17T12:07:17 MESZ" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEvery -->
        <test-method is-config="true" signature="afterEvery()[pri:0, instance:msg.group.basics.Day3@6440112d]" started-at="2025-06-17T12:07:17 MESZ" name="afterEvery" finished-at="2025-06-17T12:07:17 MESZ" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEvery -->
        <test-method is-config="true" signature="beforeEvery()[pri:0, instance:msg.group.basics.Day3@6440112d]" started-at="2025-06-17T12:07:17 MESZ" name="beforeEvery" finished-at="2025-06-17T12:07:17 MESZ" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEvery -->
        <test-method signature="mobileSignOutCarLoan(java.lang.String,java.lang.String)[pri:0, instance:msg.group.basics.Day3@6440112d]" started-at="2025-06-17T12:07:17 MESZ" name="mobileSignOutCarLoan" data-provider="getData" finished-at="2025-06-17T12:07:17 MESZ" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[thirdsetusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[thirdsetpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileSignOutCarLoan -->
        <test-method signature="webLoginCarLoan(java.lang.String,java.lang.String)[pri:0, instance:msg.group.basics.Day3@6440112d]" started-at="2025-06-17T12:07:17 MESZ" name="webLoginCarLoan" finished-at="2025-06-17T12:07:17 MESZ" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[carloan.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- webLoginCarLoan -->
        <test-method is-config="true" signature="afterEvery()[pri:0, instance:msg.group.basics.Day3@6440112d]" started-at="2025-06-17T12:07:17 MESZ" name="afterEvery" finished-at="2025-06-17T12:07:17 MESZ" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEvery -->
        <test-method is-config="true" signature="beforeEvery()[pri:0, instance:msg.group.basics.Day3@6440112d]" started-at="2025-06-17T12:07:17 MESZ" name="beforeEvery" finished-at="2025-06-17T12:07:17 MESZ" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEvery -->
        <test-method is-config="true" signature="afterEvery()[pri:0, instance:msg.group.basics.Day3@6440112d]" started-at="2025-06-17T12:07:17 MESZ" name="afterEvery" finished-at="2025-06-17T12:07:17 MESZ" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEvery -->
        <test-method signature="loginAPICarLoan()[pri:0, instance:msg.group.basics.Day3@6440112d]" started-at="2025-06-17T12:07:17 MESZ" name="loginAPICarLoan" finished-at="2025-06-17T12:07:17 MESZ" depends-on-methods="msg.group.basics.Day3.webLoginCarLoan" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginAPICarLoan -->
        <test-method is-config="true" signature="beforeEvery()[pri:0, instance:msg.group.basics.Day3@6440112d]" started-at="2025-06-17T12:07:17 MESZ" name="beforeEvery" finished-at="2025-06-17T12:07:17 MESZ" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeEvery -->
        <test-method is-config="true" signature="afterEvery()[pri:0, instance:msg.group.basics.Day3@6440112d]" started-at="2025-06-17T12:07:17 MESZ" name="afterEvery" finished-at="2025-06-17T12:07:17 MESZ" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterEvery -->
        <test-method is-config="true" signature="afterClassDay3()[pri:0, instance:msg.group.basics.Day3@6440112d]" started-at="2025-06-17T12:07:17 MESZ" name="afterClassDay3" finished-at="2025-06-17T12:07:17 MESZ" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClassDay3 -->
      </class> <!-- msg.group.basics.Day3 -->
      <class name="msg.group.basics.Day1">
        <test-method is-config="true" signature="afterSuiteLoanDepartment()[pri:0, instance:msg.group.basics.Day1@1a6d8329]" started-at="2025-06-17T12:07:17 MESZ" name="afterSuiteLoanDepartment" finished-at="2025-06-17T12:07:17 MESZ" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuiteLoanDepartment -->
      </class> <!-- msg.group.basics.Day1 -->
    </test> <!-- Car loan -->
  </suite> <!-- Loan Department -->
</testng-results>
